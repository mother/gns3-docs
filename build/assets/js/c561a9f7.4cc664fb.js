"use strict";(self.webpackChunkgns_3_docs=self.webpackChunkgns_3_docs||[]).push([[3183],{5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>g});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,g=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(g,a(a({ref:t},u),{},{components:n})):r.createElement(g,a({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:o,a[1]=s;for(var c=2;c<i;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4457:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>g,frontMatter:()=>l,metadata:()=>u,toc:()=>d});var r=n(8168),o=n(8587),i=(n(6540),n(5680)),a=n(6025),s=["components"],l={id:"vpcs",title:"VPCS",sidebar_label:"VPCS"},c=void 0,u={unversionedId:"emulators/vpcs",id:"emulators/vpcs",title:"VPCS",description:"Virtual PC Simulator is a program written by Paul Meng, which allows you to simulate a lightweight PC supporting DHCP and ping. It consumes only 2MB of RAM per instance,  and does not require an additional image.",source:"@site/docs/emulators/vpcs.md",sourceDirName:"emulators",slug:"/emulators/vpcs",permalink:"/docs/emulators/vpcs",draft:!1,editUrl:"https://github.com/mother/gns3-docs/blob/master/docs/emulators/vpcs.md",tags:[],version:"current",frontMatter:{id:"vpcs",title:"VPCS",sidebar_label:"VPCS"},sidebar:"someSidebar",previous:{title:"Create a docker container for GNS3",permalink:"/docs/emulators/create-a-docker-container-for-gns3"},next:{title:"Qemu system UUID",permalink:"/docs/emulators/qemu-system-uuid"}},p={},d=[{value:"Put a VPCS node your topology",id:"put-a-vpcs-node-your-topology",level:2},{value:"Set an IP",id:"set-an-ip",level:2},{value:"Manually set an IP",id:"manually-set-an-ip",level:3},{value:"Use DHCP",id:"use-dhcp",level:3},{value:"Ping &amp; Traceroute",id:"ping--traceroute",level:2},{value:"Save Configuration",id:"save-configuration",level:2},{value:"Limitations",id:"limitations",level:2}],m={toc:d};function g(e){var t=e.components,n=(0,o.A)(e,s);return(0,i.yg)("wrapper",(0,r.A)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"Virtual PC Simulator is a program written by Paul Meng, which allows you to simulate a lightweight PC supporting DHCP and ping. It consumes only 2MB of RAM per instance,  and does not require an additional image."),(0,i.yg)("p",null,"The official website:\n",(0,i.yg)("a",{parentName:"p",href:"https://github.com/GNS3/vpcs"},"https://sourceforge.net/projects/vpcs/?source=directory")),(0,i.yg)("h2",{id:"put-a-vpcs-node-your-topology"},"Put a VPCS node your topology"),(0,i.yg)("p",null,"The VPCS node is included with GNS3 by default.  No additional configuration is required. It will be located in the End devices category in the Devices list:"),(0,i.yg)("img",{alt:"screenshot",src:(0,a.A)("img/emulators/vpcs/1.jpg")}),(0,i.yg)("p",null,"Drag and drop an instance of VPCS into the workspace. You\u2019ll be prompted which server type will run this VPCS instance:"),(0,i.yg)("img",{alt:"screenshot",src:(0,a.A)("img/emulators/vpcs/2.jpg")}),(0,i.yg)("p",null,"(for this article, \u201cGNS3 VM\u201d was selected for the server type)\nAn instance of VPCS will now appear in the workspace:"),(0,i.yg)("img",{alt:"screenshot",src:(0,a.A)("img/emulators/vpcs/3.jpg")}),(0,i.yg)("p",null,"After you start the VPCS node, you can access its console:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"Welcome to Virtual PC Simulator, version 0.6.1\nDedicated to Daling.\nBuild time: Feb 25 2016 00:35:23\nCopyright (c) 2007-2015, Paul Meng (mirnshi@gmail.com)\nAll rights reserved.\n\nVPCS is free software, distributed under the terms of the \"BSD\" licence.\nSource code and license can be found at vpcs.sf.net.\nFor more information, please visit wiki.freecode.com.cn.\n\nPress '?' to get help.\n\nExecuting the startup file\n\n\nPC1>\n")),(0,i.yg)("h2",{id:"set-an-ip"},"Set an IP"),(0,i.yg)("h3",{id:"manually-set-an-ip"},"Manually set an IP"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"PC1> ip 192.168.1.1\nChecking for duplicate address...\nPC1 : 192.168.1.1 255.255.255.0\n")),(0,i.yg)("h3",{id:"use-dhcp"},"Use DHCP"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"PC1> dhcp\n")),(0,i.yg)("h2",{id:"ping--traceroute"},"Ping & Traceroute"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"PC1> ping 192.168.1.2\n\n84 bytes from 192.168.1.2 icmp_seq=1 ttl=64 time=0.576 ms\n84 bytes from 192.168.1.2 icmp_seq=2 ttl=64 time=0.512 ms\n84 bytes from 192.168.1.2 icmp_seq=3 ttl=64 time=0.473 ms\n84 bytes from 192.168.1.2 icmp_seq=4 ttl=64 time=0.453 ms\n84 bytes from 192.168.1.2 icmp_seq=5 ttl=64 time=1.182 ms\n")),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"PC1> trace 192.168.1.2\ntrace to 192.168.1.2, 8 hops max, press Ctrl+C to stop\n 1   *192.168.1.2   0.398 ms (ICMP type:3, code:3, Destination port unreachable)\n")),(0,i.yg)("h2",{id:"save-configuration"},"Save Configuration"),(0,i.yg)("p",null,"The configured IP address will be lost on restart, if you don\u2019t save the config:"),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre"},"PC1> save\nSaving startup configuration to startup.vpc\n.  done\n")),(0,i.yg)("h2",{id:"limitations"},"Limitations"),(0,i.yg)("p",null,"VPCS is a PC simulator. Its implementation of the network stack is not perfect, and you will see bugs when it\u2019s used in complex topologies."),(0,i.yg)("p",null,"Use of the ipterm docker container is a viable alternative to using VPCS. The ipterm container will require use of linux commands, as well as running it via the GNS3 VM for Windows/Mac OS X users.  Linux users can run it natively, provided docker-ce has been installed, and their user was added to the docker group (restarting your user session after adding your user to that group is required)."))}g.isMDXComponent=!0}}]);