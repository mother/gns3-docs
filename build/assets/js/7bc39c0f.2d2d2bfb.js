"use strict";(self.webpackChunkgns_3_docs=self.webpackChunkgns_3_docs||[]).push([[5740],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>h});var i=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,i,a=function(e,n){if(null==e)return{};var t,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=i.createContext({}),d=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=d(e.components);return i.createElement(l.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},g=i.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=d(t),g=a,h=u["".concat(l,".").concat(g)]||u[g]||f[g]||o;return t?i.createElement(h,s(s({ref:n},c),{},{components:t})):i.createElement(h,s({ref:n},c))}));function h(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=g;var r={};for(var l in n)hasOwnProperty.call(n,l)&&(r[l]=n[l]);r.originalType=e,r[u]="string"==typeof e?e:a,s[1]=r;for(var d=2;d<o;d++)s[d]=t[d];return i.createElement.apply(null,s)}return i.createElement.apply(null,t)}g.displayName="MDXCreateElement"},7616:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>d,default:()=>h,frontMatter:()=>l,metadata:()=>c,toc:()=>f});var i=t(8168),a=t(8587),o=(t(6540),t(5680)),s=t(6025),r=["components"],l={id:"configuration-transfer-qemu-vms",title:"Configuration transfer to QEMU VMs",sidebar_label:"Configuration transfer to QEMU VMs"},d=void 0,c={unversionedId:"using-gns3/advanced/configuration-transfer-qemu-vms",id:"using-gns3/advanced/configuration-transfer-qemu-vms",title:"Configuration transfer to QEMU VMs",description:"GNS3 v2.2.18 introduces a feature to transfer files,",source:"@site/docs/using-gns3/advanced/configuration-transfer-qemu-vms.md",sourceDirName:"using-gns3/advanced",slug:"/using-gns3/advanced/configuration-transfer-qemu-vms",permalink:"/docs/using-gns3/advanced/configuration-transfer-qemu-vms",draft:!1,editUrl:"https://github.com/mother/gns3-docs/blob/master/docs/using-gns3/advanced/configuration-transfer-qemu-vms.md",tags:[],version:"current",frontMatter:{id:"configuration-transfer-qemu-vms",title:"Configuration transfer to QEMU VMs",sidebar_label:"Configuration transfer to QEMU VMs"},sidebar:"someSidebar",previous:{title:"Port name formatting",permalink:"/docs/using-gns3/advanced/port-name-formatting"},next:{title:"GNS3 server configuration file",permalink:"/docs/using-gns3/administration/gns3-server-configuration-file"}},u={},f=[{value:"Disk Interface of Config Disk",id:"disk-interface-of-config-disk",level:2},{value:"Config ZIP is not updated while Node is running",id:"config-zip-is-not-updated-while-node-is-running",level:2},{value:"GNS3 Server needs Mtools installed",id:"gns3-server-needs-mtools-installed",level:2},{value:"Some VM Types don&#39;t support additional Disk Images",id:"some-vm-types-dont-support-additional-disk-images",level:2},{value:"IOS disk naming",id:"ios-disk-naming",level:2},{value:"Archive feature",id:"archive-feature",level:2},{value:"Startup Configuration",id:"startup-configuration",level:2}],g={toc:f};function h(e){var n=e.components,t=(0,a.A)(e,r);return(0,o.yg)("wrapper",(0,i.A)({},g,t,{components:n,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"GNS3 v2.2.18 introduces a feature to transfer files,\nfor example configurations, between the GNS3 GUI and QEMU VMs.\nThat's done by adding an additional disk image to the VM\nand implement a way to transfer its data to the user.\nIt is not as convenient to use as the IOS and IOU method,\nbut it is more flexible.\nIt's not limited to configurations and\nit will work for almost all QEMU node types."),(0,o.yg)("p",null,"The additional disk image, named config disk,\nis not active by default.\nYou have to enable it in the HDD tab of the\nnode properties (for a specific node)\nor the QEMU VM template (for all new nodes of that type)."),(0,o.yg)("img",{alt:"screenshot",src:(0,s.A)("img/using-gns3/advanced/configuration-transfer-qemu-vms/1.png")}),(0,o.yg)("p",null,"This adds a FAT formatted image as hard disk D to the node.\nThe user can now transfer data to/from this disk to the VM.\nThere is no automatic transfer into the node's configuration,\nas for IOS and IOU devices.\nThe config disk is simply a file storage with all its flexibility.\nThe disk size is set to 1 MB,\nso it can't be used to exchange large files."),(0,o.yg)("p",null,"The config disk images are not simply exposed to the user,\nas it's cumbersome to use them.\nInstead, they are converted to ZIP archives.\nBy right click on a node / Export config the\nZIP file is copied to the users computers\nand can be opened and inspected there.\nBy creating/modifying a ZIP file and importing it,\nit is copied to the node."),(0,o.yg)("p",null,"When a node is initially started the config disk is empty.\nSometimes it might be useful to fill it with initial contents.\nThe manual way is to import a ZIP archive before the first start of a node.\nThis can be automated by storing the ZIP archive in the\n",(0,o.yg)("inlineCode",{parentName:"p"},"GNS3/images/QEMU"),' directory and entering its name\nin the "Startup-cfg" field of the HDD configuration.'),(0,o.yg)("h1",{id:"pitfalls"},"Pitfalls"),(0,o.yg)("h2",{id:"disk-interface-of-config-disk"},"Disk Interface of Config Disk"),(0,o.yg)("p",null,"A VM doesn't use the hard disk images in the sequence\nthey are defined in the node.\nThe VM additionally considers the disk interface type.\nA disk with an ide disk interface has priority over\ndisks with other interface types.\nFor example, if the HDA disk uses the virtio type\nand the config disk uses ide,\nthe VM will use the config disk as its primary disk and\ntries to boot from it.\nThat, of course, will fail.\nTherefore, it's strongly suggested using the same disk interface type\nfor all the disks of a node."),(0,o.yg)("p",null,'To make this issue less likely in the future,\nnewly created templates will set the disk interface by default to "none".\nConfig disks with the "none" disk interface will automatically\nuse the same disk interface as the first hard disk (HDA).\nBut for already existing nodes/template you have to pay attention.'),(0,o.yg)("h2",{id:"config-zip-is-not-updated-while-node-is-running"},"Config ZIP is not updated while Node is running"),(0,o.yg)("p",null,"The ZIP archive is converted to the config disk,\nwhen the node is started.\nLikewise, the ZIP archive is updated from the config disk,\nwhen the node is stopped.\nTherefore, changes on the config disk while the nodes are running,\nwill not immediately update the ZIP archive.\nYou have to wait until the node is stopped."),(0,o.yg)("h2",{id:"gns3-server-needs-mtools-installed"},"GNS3 Server needs Mtools installed"),(0,o.yg)("p",null,"This config disk feature uses the\n",(0,o.yg)("a",{parentName:"p",href:"https://www.gnu.org/software/mtools/"},"Mtools"),"\nprogram to access the config disk.\nTherefore, it needs to be installed on the Linux GNS3 server.\nThe gns3-server package for Ubuntu has added mtools as a requirement,\nso it will be automatically installed in the GNS3VM and other Ubuntu systems.\nDifferent Linux flavors need to additionally install mtools."),(0,o.yg)("h2",{id:"some-vm-types-dont-support-additional-disk-images"},"Some VM Types don't support additional Disk Images"),(0,o.yg)("p",null,"Some VM types, like ASAv, support only the main disk image.\nThe config disk will therefore not be visible on these VMs."),(0,o.yg)("h1",{id:"use-with-iosv-and-iosvl2"},"Use with IOSv and IOSvL2"),(0,o.yg)("h2",{id:"ios-disk-naming"},"IOS disk naming"),(0,o.yg)("p",null,"IOSv and IOSvL2 images have an odd way to name the flash drives."),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"flash:"),", ",(0,o.yg)("inlineCode",{parentName:"li"},"flash0:")," - part within IOS image"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"flash2:")," - first external disk"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"flash1:")," - second external disk"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"flash3:")," - third external disk")),(0,o.yg)("p",null,"So lets assume the following IOSv template:"),(0,o.yg)("img",{alt:"screenshot",src:(0,s.A)("img/using-gns3/advanced/configuration-transfer-qemu-vms/2.png")}),(0,o.yg)("p",null,"The HDB disk is the first external disk and\nwill therefore be named ",(0,o.yg)("inlineCode",{parentName:"p"},"flash2:")," within IOS.\nThe config disk is the second external disk and\nwill be named ",(0,o.yg)("inlineCode",{parentName:"p"},"flash1:"),".\nPretty confusing, but that's the way IOS is working."),(0,o.yg)("h2",{id:"archive-feature"},"Archive feature"),(0,o.yg)("p",null,"With the\n",(0,o.yg)("a",{parentName:"p",href:"https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/config-mgmt/configuration/15-sy/config-mgmt-15-sy-book/cm-config-versioning.html"},"archive"),"\nfeature of IOS\nthe configs can be automatically saved to the config disk.\nSo you don't have to manually copy them.\nThat has the additional benefit,\nthat the user gets a backup of his configurations."),(0,o.yg)("p",null,"Add the following to the IOS configuration:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"archive\n path flash1:$h\n write-memory\n")),(0,o.yg)("p",null,"The path has to be adopted to the IOS disk name used for the config disk,\nsee the previous section."),(0,o.yg)("p",null,"By default, it will create a maximum of 10 backups,\nbut that can be changed with the ",(0,o.yg)("inlineCode",{parentName:"p"},"maximum")," subcommand."),(0,o.yg)("h2",{id:"startup-configuration"},"Startup Configuration"),(0,o.yg)("p",null,'IOSv / IOSvL2 has the ability to load an initial configuration\nfrom a file named "ios_config.txt" placed on a flash drive.\nIt additionally needs a checksum file named "ios_config_checksum",\ncontaining the MD5 checksum of ios_config.txt.\nThe IOSv appliance uses disk HDB with an IOSv_startup_config.img,\nthat contains this initial ios_config.txt.'),(0,o.yg)("p",null,"However, this image is difficult to modify.\nAn alternative is to add this ios_config.txt to the config disk.\nAll we have to do is to create this file,\nput its MD5 sum into ios_config_checksum and\ncreate a zip file containing them.\nWell, there is one quirk.\nThe checksum file should contain only the 32 characters of the MD5 sum and\nan optional linefeed."),(0,o.yg)("p",null,"As an example here the config ZIP file I'm using for IOSv and IOSvL2: ",(0,o.yg)("a",{href:(0,s.A)("configs/IOSv_startup_image.zip"),target:"_blank"},"IOSv_startup_image.zip")),(0,o.yg)("p",null,'I have added it as a config disk "Startup-cfg",\nso it\'s automatically added to all new IOSv VMs.\nThis replaces the old HDB IOSv_startup_image.img,\nwhich should be cleared from the template.'),(0,o.yg)("img",{alt:"screenshot",src:(0,s.A)("img/using-gns3/advanced/configuration-transfer-qemu-vms/3.png")}))}h.isMDXComponent=!0}}]);