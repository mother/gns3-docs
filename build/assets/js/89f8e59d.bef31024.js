"use strict";(self.webpackChunkgns_3_docs=self.webpackChunkgns_3_docs||[]).push([[8797],{5680:(e,t,n)=>{n.d(t,{xA:()=>m,yg:()=>f});var r=n(6540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=p(n),g=a,f=u["".concat(s,".").concat(g)]||u[g]||c[g]||o;return n?r.createElement(f,i(i({ref:t},m),{},{components:n})):r.createElement(f,i({ref:t},m))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3295:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>m,contentTitle:()=>s,default:()=>g,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var r=n(8168),a=n(8587),o=(n(6540),n(5680)),i=["components"],l={id:"port-name-formatting",title:"Port name formatting",sidebar_label:"Port name formatting"},s=void 0,p={unversionedId:"using-gns3/advanced/port-name-formatting",id:"using-gns3/advanced/port-name-formatting",title:"Port name formatting",description:"Some nodes (like QEMU VMs) will allow you to personalize the name of its ports, in order to match the name of the interfaces inside the emulator.",source:"@site/docs/using-gns3/advanced/port-name-formatting.md",sourceDirName:"using-gns3/advanced",slug:"/using-gns3/advanced/port-name-formatting",permalink:"/docs/using-gns3/advanced/port-name-formatting",draft:!1,editUrl:"https://github.com/mother/gns3-docs/blob/master/docs/using-gns3/advanced/port-name-formatting.md",tags:[],version:"current",frontMatter:{id:"port-name-formatting",title:"Port name formatting",sidebar_label:"Port name formatting"},sidebar:"someSidebar",previous:{title:"Create a new version for an appliance",permalink:"/docs/using-gns3/advanced/create-a-new-version-for-an-appliance"},next:{title:"Configuration transfer to QEMU VMs",permalink:"/docs/using-gns3/advanced/configuration-transfer-qemu-vms"}},m={},u=[{value:"Simple Syntax",id:"simple-syntax",level:2},{value:"Use Segments",id:"use-segments",level:2}],c={toc:u};function g(e){var t=e.components,n=(0,a.A)(e,i);return(0,o.yg)("wrapper",(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("p",null,"Some nodes (like QEMU VMs) will allow you to personalize the name of its ports, in order to match the name of the interfaces inside the emulator."),(0,o.yg)("h2",{id:"simple-syntax"},"Simple Syntax"),(0,o.yg)("p",null,"The first set of curly brackets (",(0,o.yg)("inlineCode",{parentName:"p"},"{}"),") will be replaced by the interface number\nFor example: ",(0,o.yg)("inlineCode",{parentName:"p"},"eth{}")," will give:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"eth0"),(0,o.yg)("li",{parentName:"ul"},"eth1"),(0,o.yg)("li",{parentName:"ul"},"eth2")),(0,o.yg)("p",null,"A more verbose name format, like ",(0,o.yg)("inlineCode",{parentName:"p"},"eth{port0}")," and ",(0,o.yg)("inlineCode",{parentName:"p"},"eth{0}"),", will have the same effect."),(0,o.yg)("h2",{id:"use-segments"},"Use Segments"),(0,o.yg)("p",null,"Segments allow you to split your interface in multiple ports\nFor example, here is ",(0,o.yg)("inlineCode",{parentName:"p"},"Ethernet{segment0}/{port0}")," with a specified segment size of 3:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Ethernet0/0"),(0,o.yg)("li",{parentName:"ul"},"Ethernet0/1"),(0,o.yg)("li",{parentName:"ul"},"Ethernet0/2"),(0,o.yg)("li",{parentName:"ul"},"Ethernet1/0"),(0,o.yg)("li",{parentName:"ul"},"Ethernet1/1")),(0,o.yg)("p",null,"You can also change the start number.\nFor example, this is ",(0,o.yg)("inlineCode",{parentName:"p"},"Ethernet{segment1}/{port1}")," with a segment size of 3:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},"Ethernet1/1"),(0,o.yg)("li",{parentName:"ul"},"Ethernet1/2"),(0,o.yg)("li",{parentName:"ul"},"Ethernet1/3"),(0,o.yg)("li",{parentName:"ul"},"Ethernet2/1"),(0,o.yg)("li",{parentName:"ul"},"Ethernet2/2")),(0,o.yg)("p",null,"This work from ",(0,o.yg)("inlineCode",{parentName:"p"},"port0")," to ",(0,o.yg)("inlineCode",{parentName:"p"},"port9"),". If you need a bigger range, feel free to ask us."))}g.isMDXComponent=!0}}]);